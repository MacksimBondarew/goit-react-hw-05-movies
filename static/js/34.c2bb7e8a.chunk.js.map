{"version":3,"file":"static/js/34.c2bb7e8a.chunk.js","mappings":"yOAmGA,UA/EqB,WAAO,IAAD,IACvB,GAA4CA,EAAAA,EAAAA,UAAS,CAAC,GAAtD,eAAOC,EAAP,KAAuBC,EAAvB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAExDC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,WAAyBC,GAAzB,gGAE+BC,EAAAA,EAAAA,IAAA,6CACmBD,EADnB,6DAF/B,OAEcE,EAFd,OAKQZ,EAAkBY,EAASC,MALnC,gDAOQC,QAAQC,IAAI,oNAPpB,0DADY,uBAAC,SAAD,2BAWZC,CAAUf,EACb,GAAE,CAACA,IAEJ,IAAQgB,EACJlB,EADIkB,MAAOC,EACXnB,EADWmB,YAAaC,EACxBpB,EADwBoB,OAAQC,EAChCrB,EADgCqB,SAAUC,EAC1CtB,EAD0CsB,aAE9C,OACI,iCACI,SAAC,KAAD,WACI,SAAC,KAAD,CAAYC,GAAIjB,EAAiBkB,QAAjC,wBAEJ,UAAC,KAAD,YACI,SAAC,KAAD,WACI,SAAC,KAAD,CACIC,IACIN,GAAW,0CACwBA,GAEvCO,IAAKR,OAGb,UAAC,KAAD,YACI,SAAC,KAAD,UAAQA,KACR,UAAC,KAAD,0BACiBI,GAAgBA,EAAaK,QAAQ,GADtD,QAGA,SAAC,KAAD,wBACA,SAAC,KAAD,UAAeN,KACf,SAAC,KAAD,UACKD,GACGA,EAAOQ,KAAI,SAAAC,GAAK,OACZ,SAAC,KAAD,UACKA,EAAMC,MADKD,EAAMlB,GADV,OAMxB,UAAC,KAAD,YACI,SAAC,KAAD,WACI,SAAC,KAAD,CAASY,GAAG,OAAZ,qBAEJ,SAAC,KAAD,WACI,SAAC,KAAD,CAASA,GAAG,UAAZ,8BAIZ,SAAC,KAAD,QAEJ,SAAC,KAAD,WACI,SAAC,EAAAQ,SAAD,CAAUC,UACN,SAAC,IAAD,CACIC,MAAO,CAACC,UAAW,UACnBC,MAAM,UACNC,YAAa,CAAC,EACdC,SAAO,EACPC,KAAM,KANd,UASI,SAAC,KAAD,UAKnB,C,+YC/FYC,EAAYC,EAAAA,QAAAA,IAAH,0xBAoCTC,EAAUD,EAAAA,QAAAA,IAAH,mFAKPE,EAAQF,EAAAA,QAAAA,GAAH,kGAMLG,EAAcH,EAAAA,QAAAA,IAAH,8DAKXI,EAAYJ,EAAAA,QAAAA,EAAH,kGAMTK,EAAgBL,EAAAA,QAAAA,GAAH,kGAMbM,EAAeN,EAAAA,QAAAA,EAAH,0HAOZO,EAAYP,EAAAA,QAAAA,GAAH,wJASTQ,EAAYR,EAAAA,QAAAA,GAAH,iLASTS,EAAOT,EAAAA,QAAAA,GAAH,wLAUJU,EAAWV,EAAAA,QAAAA,GAAH,2GAORW,GAAUX,EAAAA,EAAAA,SAAOY,EAAAA,GAAPZ,CAAH,wRAYPa,GAAab,EAAAA,EAAAA,SAAOY,EAAAA,GAAPZ,CAAH,4W","sources":["components/Markup/MoviesDetails.jsx","components/StyleComponent/MoviesDetails.styled.jsx"],"sourcesContent":["import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport {\n    Container,\n    Title,\n    MoviePoster,\n    UserScore,\n    OverviewTitle,\n    OverviewText,\n    GenreList,\n    GenreItem,\n    Wrapper,\n    ListItem,\n    List,\n    NavLink,\n    StyledLink,\n} from '../StyleComponent/MoviesDetails.styled';\nimport { DotLoader } from 'react-spinners';\n\nconst MovieDetails = () => {\n    const [allInformation, setAllInformation] = useState({});\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkLocation = useRef(location.state?.from ?? '/');\n\n    useEffect(() => {\n        async function movieName(id) {\n            try {\n                const response = await axios.get(\n                    `https://api.themoviedb.org/3/movie/${id}?api_key=3371eb177fbad0ff5df328740d3861be&language=en-US`\n                );\n                setAllInformation(response.data);\n            } catch (error) {\n                console.log('Помилка при отримані повної інформації');\n            }\n        }\n        movieName(movieId);\n    }, [movieId]);\n\n    const { title, poster_path, genres, overview, vote_average } =\n        allInformation;\n    return (\n        <>\n            <Container>\n                <StyledLink to={backLinkLocation.current}>Go back</StyledLink>\n            </Container>\n            <Container>\n                <Wrapper>\n                    <MoviePoster\n                        src={\n                            poster_path &&\n                            `https://image.tmdb.org/t/p/w500/${poster_path}`\n                        }\n                        alt={title}\n                    />\n                </Wrapper>\n                <Wrapper>\n                    <Title>{title}</Title>\n                    <UserScore>\n                        User score: {vote_average && vote_average.toFixed(2)}%\n                    </UserScore>\n                    <OverviewTitle>overview</OverviewTitle>\n                    <OverviewText>{overview}</OverviewText>\n                    <GenreList>\n                        {genres &&\n                            genres.map(genre => (\n                                <GenreItem key={genre.id}>\n                                    {genre.name}\n                                </GenreItem>\n                            ))}\n                    </GenreList>\n                    <List>\n                        <ListItem>\n                            <NavLink to=\"cast\">cast</NavLink>\n                        </ListItem>\n                        <ListItem>\n                            <NavLink to=\"reviews\">reviews</NavLink>\n                        </ListItem>\n                    </List>\n                </Wrapper>\n                <Wrapper></Wrapper>\n            </Container>\n            <Container>\n                <Suspense fallback={\n                    <DotLoader\n                        style={{textAlign: 'center'}}\n                        color=\"#3682d6\"\n                        cssOverride={{}}\n                        loading\n                        size={70}\n                    />\n                }>\n                    <Outlet />\n                </Suspense>\n            </Container>\n        </>\n    );\n};\nexport default MovieDetails;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n    padding-left: 20px;\n    padding-right: 20px;\n    margin-left: auto;\n    margin-right: auto;\n\n    @media screen and (min-width: 320px) {\n        width: 320px;\n    }\n    @media screen and (min-width: 768px) {\n        width: 768px;\n        padding-left: 20px;\n        padding-right: 20px;\n    }\n    @media screen and (min-width: 1280px) {\n        width: 1280px;\n    }\n    display: block;\n    gap: 60px;\n    display: flex;\n    margin: 0 auto;\n    flex-wrap: wrap;\n    @media screen and (min-width: 768px) {\n        gap: 16px;\n        flex-wrap: nowrap;\n    }\n    @media screen and (min-width: 768px) {\n        gap: 29px;\n        flex-wrap: nowrap;\n    }\n\n    padding-top: 20px;\n    &:last-child {\n        justify-content: center;\n    }\n`;\nexport const Wrapper = styled.div`\n    &:nth-child(2) {\n        text-align: center;\n    };\n`;\nexport const Title = styled.h1`\n    font-size: 2.5rem;\n    font-weight: bold;\n    margin-bottom: 20px;\n`;\n\nexport const MoviePoster = styled.img`\n    width: 500px;\n    height: auto;\n`;\n\nexport const UserScore = styled.p`\n    font-size: 1.3rem;\n    font-weight: bold;\n    margin-bottom: 20px;\n`;\n\nexport const OverviewTitle = styled.h2`\n    font-size: 1.5rem;\n    font-weight: bold;\n    margin-bottom: 10px;\n`;\n\nexport const OverviewText = styled.p`\n    font-size: 1.2rem;\n    line-height: 1.5;\n    margin-bottom: 20px;\n    text-align: center;\n`;\n\nexport const GenreList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const GenreItem = styled.li`\n    font-size: 1.2rem;\n    margin-right: 10px;\n    margin-bottom: 10px;\n    padding: 5px 10px;\n    border-radius: 5px;\n    background-color: #eee;\n`;\n\nexport const List = styled.ul`\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    display: flex;\n    justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n    list-style-type: none;\n    &:last-child {\n        margin-left: 20px;\n    }\n`;\n\nexport const NavLink = styled(Link)`\n    text-decoration: none;\n    font-weight: 500;\n    font-size: 20px;\n    letter-spacing: 0.02em;\n    line-height: 1.14;\n    padding: 20px 20px;\n    background-color: #afeeee;\n    border-radius: 50px;\n    color: black;\n    display: inline-block;\n`;\nexport const StyledLink = styled(Link)`\n    display: inline-block;\n    padding: 0.5rem 1rem;\n    font-size: 1rem;\n    font-weight: 500;\n    color: #fff;\n    background-color: #0077cc;\n    border-radius: 0.25rem;\n    text-decoration: none;\n    cursor: pointer;\n    transition: background-color 0.2s ease-in-out;\n\n    &:hover {\n        background-color: #005fa3;\n    }\n`;\n"],"names":["useState","allInformation","setAllInformation","movieId","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","id","axios","response","data","console","log","movieName","title","poster_path","genres","overview","vote_average","to","current","src","alt","toFixed","map","genre","name","Suspense","fallback","style","textAlign","color","cssOverride","loading","size","Container","styled","Wrapper","Title","MoviePoster","UserScore","OverviewTitle","OverviewText","GenreList","GenreItem","List","ListItem","NavLink","Link","StyledLink"],"sourceRoot":""}